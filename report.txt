对于basic部分 通过将vm从process sz 作为start开始映射来达到目标效果 并通过 is_mapped来handle page fault。对于删除的文件，通过判断是不是MAP_SHARED来决定是否写回

通过直接将虚拟页映射到kernel space来达到节省一次复制的效果，为了防止mapping的buf 被释放掉，在buf中添加了ismapped来指示是否应该释放某种程度上起到替代bpin的作用但是更加灵活且与其他操作平行。在处理page fault的函数时直接仿照iread进行修改来起到一次复制的目的。
但需要注意的是为了防止读到相同文件用过并修改过而且释放掉的buf，采用每次只读新buf的read_new函数进行处理。同时在unmap的时候要对虚拟空间是映射到usr space和kernel space 的虚拟空间通过不同的函数进行空间释放，
为此，在对buf的释放中我采取的是遍历所有buf找到data地址和释放的物理地址相同的buf项进行释放。